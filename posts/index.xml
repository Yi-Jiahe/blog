<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jiahe's Blog</title><link>https://blog.jiahe.dev/posts/</link><description>Recent content in Posts on Jiahe's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Feb 2025 09:05:39 +0800</lastBuildDate><atom:link href="https://blog.jiahe.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>TentaTwo Devlog #1</title><link>https://blog.jiahe.dev/posts/1740618339/</link><pubDate>Thu, 27 Feb 2025 09:05:39 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1740618339/</guid><description>&lt;p>Having used the TentaOne for almost half a year now, I have come to believe that a new design would be more appropriate than a revision.
With that, I decided to mark the start of development on the TentaTwo.&lt;/p>
&lt;h2 id="learning-points-fron-the-tentaone">Learning points fron the TentaOne&lt;/h2>
&lt;p>To understand the design choices made with the TentaTwo, it is important to understand the pain points from the TentaOne which motivated them.&lt;/p>
&lt;h3 id="keymap-is-difficult-to-remember">Keymap is difficult to remember&lt;/h3>
&lt;p>A macropad allows the collection of highly varied actions onto a single device.
When designing the TentaOne, I figured that the most important thing was to provide enough keys such that there would be room to add as many macros one desired.
I believed that the layout could be improved over time and learnt with practice.&lt;/p></description></item><item><title>My experience building a split keyboard in Ergogen</title><link>https://blog.jiahe.dev/posts/1730463182/</link><pubDate>Fri, 01 Nov 2024 20:13:02 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1730463182/</guid><description>&lt;p>Having dipped my toes in PCB design and manufacturing with the TentaOne, I figured it was time to tackle a project that I had my eyes on for a couple of years now.&lt;/p>
&lt;p>Ever since I first saw the Dactyl in 2022, I&amp;rsquo;ve wanted to own a split keyboard.
Not so much for the supposed ergonomic benefits, but more so because of the uniqueness and maker bragging rights.&lt;/p>
&lt;h2 id="the-goldilocks-board">The Goldilocks board&lt;/h2>
&lt;p>Split keyboards come in many flavours, with popular designs like the Sofle, Corne, etc.
The common boards can be bought from some sellers and even prebuilt, but they&amp;rsquo;re quite costly.&lt;/p></description></item><item><title>Redis Persistence in Kubernetes</title><link>https://blog.jiahe.dev/posts/1725696422/</link><pubDate>Sat, 07 Sep 2024 16:07:02 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1725696422/</guid><description>&lt;p>Some time ago &lt;a href="fwmcbaubau.com">fwmcbaubau.com&lt;/a> experienced data loss multiple times in a short time span due to the lack of persistent storage.&lt;/p>
&lt;p>The data was stored in a self-hosted Redis server because it was cheaper to provision a Redis server with extra resources rather than utilize the SaaS version.
When I first developed the feature I didn&amp;rsquo;t provision any storage for the pod because of the added complexity and cost.
When the first data loss incident occurred, I looked into the costs of provisioning storage and concluded that it was reasonable.
However, restoring the data wasn&amp;rsquo;t a big deal and enough time had passed that I didn&amp;rsquo;t feel like modifying the deployment.
The recent incidents finally got me to take action because it took me a while to notice the first and the second one happened really soon after the first.&lt;/p></description></item><item><title>iPhone Standby Mode Dock</title><link>https://blog.jiahe.dev/posts/1725691761/</link><pubDate>Sat, 07 Sep 2024 14:49:21 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1725691761/</guid><description>&lt;p>My brother shared this &lt;a href="https://www.youtube.com/watch?v=L3nWw8qSYgk" target="_blank">iPhone Standby Mode Dock&lt;/a> with me and asked me to print it.
My printer, however, is seldom used and poorly maintained so I wanted to modify the model to increase the chances of it printing successfully.&lt;/p>
&lt;h2 id="design">Design&lt;/h2>
&lt;p>Scott kindly shared the &lt;a href="https://makerworld.com/en/models/615378#profileId-538769" target="_blank">models&lt;/a> for non-commercial use.
Because the files were not in an easily editable format, I created a new editable CAD &lt;a href="https://cad.onshape.com/documents/088aba448095a55b0cefb778/w/61f07337c3a206c3a56a4a47/e/3ef5bf1044b6f81334bc4e6d" target="_blank">document&lt;/a>.&lt;/p>
&lt;p>The main thing I wanted to change was the amount of plastic required for the print.
While this detracted completely from the point of the original build, the original design didn&amp;rsquo;t really appeal to me anyway.
To do so I shortened the dock and removed the enclosure, removing the need for all the infill.&lt;/p></description></item><item><title>Little Miners Poc</title><link>https://blog.jiahe.dev/posts/1709726945/</link><pubDate>Wed, 06 Mar 2024 20:09:05 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1709726945/</guid><description>&lt;p>Last Friday, I thought up a grand plan on how I could challenge the current state of mobile anime games.
The idea was that instead of gambling for pngs, you could pay to contribute to commissioning new character art.
This way, you&amp;rsquo;re guaranteed something for the money you put in, it benefits the entire player base and artists.
In a sense, I was hoping to centralize the exchange of money and services through an anime game I developed.&lt;/p></description></item><item><title>fwmcbaubau.com</title><link>https://blog.jiahe.dev/posts/1709531903/</link><pubDate>Mon, 04 Mar 2024 05:58:23 +0000</pubDate><guid>https://blog.jiahe.dev/posts/1709531903/</guid><description>&lt;p>Before we begin, check out the site at &lt;a href="fwmcbaubau.com">fwmcbaubau.com&lt;/a>!&lt;/p>
&lt;p>In case you didn&amp;rsquo;t visit the site or came from a future where the site is no longer live, here&amp;rsquo;s a brief description.&lt;/p>
&lt;p>fwmcbaubau.com is a website where users contribute to a global click count by clicking on a button which also plays an animation and audio.&lt;/p>
&lt;h1 id="architecture">Architecture&lt;/h1>
&lt;p>Now that we&amp;rsquo;re on the same page, I&amp;rsquo;ll share the architecture of the site. The site itself is statically hosted, with the assets coming from a CDN.&lt;/p></description></item><item><title>Developing Mobile Pages With Pillow</title><link>https://blog.jiahe.dev/posts/1691644449/</link><pubDate>Thu, 10 Aug 2023 05:14:09 +0000</pubDate><guid>https://blog.jiahe.dev/posts/1691644449/</guid><description>&lt;h1 id="background">Background&lt;/h1>
&lt;p>At this point I had a Lambda function for converting image data to binary data directly usable by the epdiy Arduino library using Pillow.&lt;/p>
&lt;p>I also explored taking screenshots of webpages using Puppeteer, uploading them to S3 and passing them through the Lambda function.
However, I had a few concerns about this approach:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The response time of the endpoint would be dependent on how long it takes to render the page alongside the other network requests, which could be highly variable.&lt;/p></description></item><item><title>SQLite3 and Go</title><link>https://blog.jiahe.dev/posts/1691638384/</link><pubDate>Thu, 10 Aug 2023 03:33:04 +0000</pubDate><guid>https://blog.jiahe.dev/posts/1691638384/</guid><description>&lt;h1 id="the-issue">The issue&lt;/h1>
&lt;p>Using SQLite with go using using the mattn/go-sqlite3 module requires cgo which in turn requires gcc and complicates cross-compliation.&lt;/p>
&lt;p>If developing on Windows, gcc needs to be installed which can be quite the ordeal.&lt;/p>
&lt;p>If using multistage builds in Docker, care needs to be taken to ensure that the architecture matches the final stage. I encounted an issue when using the default golang image which is a Debian image to build for a final Alpine image.&lt;/p></description></item><item><title>Ttgo T5 V2 3</title><link>https://blog.jiahe.dev/posts/1690722301/</link><pubDate>Sun, 30 Jul 2023 21:05:01 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1690722301/</guid><description>&lt;h1 id="motivation">Motivation&lt;/h1>
&lt;p>I found a new toy after being inspired by a post I saw about image generation AI model being run on a Raspberry Pi. One of the suggestions was to hook up the output to an eInk display because of the slow generation rate, with a link to some Raspberry Pi eInk display combos for ~100 pounds.&lt;/p>
&lt;p>After a bit of searching and I found an esp32 connected 4.7&amp;quot; 540x960 eInk display for about 50SGD plus shipping.&lt;/p></description></item><item><title>Garmin Watchface</title><link>https://blog.jiahe.dev/posts/1661264948/</link><pubDate>Tue, 23 Aug 2022 22:29:08 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1661264948/</guid><description>&lt;p>At the end of May I got a new running watch, specifically the Garmin Forerunner 55 since I had started running a couple of weeks before to prepare for my IPPT and I didn&amp;rsquo;t want to run with my phone and the GPS tracking was also quite bad. Having gotten a new fitness tracker, the first thing I did was of course to find out how to develop on it.&lt;/p></description></item><item><title>Gw2 Market Analysis 0.2.0</title><link>https://blog.jiahe.dev/posts/1636212084/</link><pubDate>Sat, 06 Nov 2021 23:21:24 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1636212084/</guid><description>&lt;p>Financial Data is difficult to get. Its often rate limited, or charged by the number of API calls. On top of that, one needs to be on top of things to understand what they mean. In order to get my toes wet, I decided to explore the GW2 API and the BLTC, or in-game aution house to get some practical experience on how quantitative analysis and markets work.&lt;/p>
&lt;p>&lt;a href="https://github.com/Yi-Jiahe/gw2-market-analysis" target="_blank">GW2 Market Analysis&lt;/a> is a Java application which scrapes the market every 12 hours to avoid aliasing, assuming that there exists periodic market fluctations with a period of one day. v0.1.0 of the application was completed in late August/ early September and implemented the scraper and database, such that there would be data for me to work with in the future. I set up a Lightsail instance to host the database and used a Systemd timer and service to schedule the scraper to run and store its results. I made use of the JDBC API to interact with my MySQL database on the machine.&lt;/p></description></item><item><title>Sound Site Conception</title><link>https://blog.jiahe.dev/posts/1636209944/</link><pubDate>Sat, 06 Nov 2021 22:45:44 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1636209944/</guid><description>&lt;p>&lt;a href="https://github.com/Yi-Jiahe/soundsite" target="_blank">Sound site&lt;/a>, (read: sound sight), is a small project I worked on a bit in late June, exploring the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API" target="_blank">Web Audio API&lt;/a>. The idea was to make a easily accessible way for people to visualize sound and explore the effects of audio effects on the waveform.&lt;/p>
&lt;p>The basic idea of the Web Audio API is an Audio Routing Graph, which lives within an Audio Context. The graph is formed of individual Audio Nodes, of which there are three types, Sources or Inputs, Effects and Destinations or Outputs. Sources can be Oscillators which basically produce notes, Audio Recordings like files and Microphones. The Ouputs are basically the device speakers. Effects nodes can be compared to guitar effects pedals such as the DelayNode, DynamicsCompressorNode and GainNode. They do however, also provide functions like data analysis with the AnalyserNodes and other functions such as merging and splitting channels with the ChannelSplitterNode, ChannelMergerNode and audio spatialization.&lt;/p></description></item><item><title>Hello Blog</title><link>https://blog.jiahe.dev/posts/1623987444/</link><pubDate>Fri, 18 Jun 2021 11:37:24 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1623987444/</guid><description>&lt;p>Till now, I have been sharing my successes and completed projects on my portfolio at &lt;a href="https://www.jiahe.dev" target="_blank">https://www.jiahe.dev&lt;/a>, which you may want to take a look at. However, projects are never smooth sailing and some ideas have never seen the light of day. This blog is made for such projects, to document their progress regardless and for me to share my thoughts.&lt;/p>
&lt;p>On that note, a couple of long running projects I have had which I hope to showcase some time in the future are my audio effects platform and drone development and simulation project.&lt;/p></description></item><item><title>Hello World</title><link>https://blog.jiahe.dev/posts/1623901051/</link><pubDate>Thu, 17 Jun 2021 11:37:31 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1623901051/</guid><description>&lt;p>Orignally I had only planned for one Hello World post but because getting the blog up and running posed more of a challenge than initially expected, I&amp;rsquo;ll break it into two. This first post covers the process of creating the blog while the next will explain my rationale for creating the blog.&lt;/p>
&lt;p>So, I started off looking at some popular options for webpage design and hosting like Wix and Wordpress, especially because I had heard things about how popular Wordpress was and figured it was a good skill to learn. I was quickly turned away by the monthly costs however and decided to look for something else as I&amp;rsquo;m still at that point in time where I have much more time than money. I turned to GitHub Pages because it&amp;rsquo;s what I used for my portfolio, but I wanted to see if I could do a bit more.&lt;/p></description></item></channel></rss>