<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Jiahe's Blog</title><link>https://blog.jiahe.dev/tags/golang/</link><description>Recent content in Golang on Jiahe's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 10 Aug 2023 03:33:04 +0000</lastBuildDate><atom:link href="https://blog.jiahe.dev/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>SQLite3 and Go</title><link>https://blog.jiahe.dev/posts/1691638384/</link><pubDate>Thu, 10 Aug 2023 03:33:04 +0000</pubDate><guid>https://blog.jiahe.dev/posts/1691638384/</guid><description>&lt;h2 id="the-issue">The issue&lt;/h2>
&lt;p>Using SQLite with go using using the mattn/go-sqlite3 module requires cgo which in turn requires gcc and complicates cross-compliation.&lt;/p>
&lt;p>If developing on Windows, gcc needs to be installed which can be quite the ordeal.&lt;/p>
&lt;p>If using multistage builds in Docker, care needs to be taken to ensure that the architecture matches the final stage. I encounted an issue when using the default golang image which is a Debian image to build for a final Alpine image.&lt;/p></description></item></channel></rss>