<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud on Jiahe's Blog</title><link>https://blog.jiahe.dev/tags/cloud/</link><description>Recent content in Cloud on Jiahe's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 07 Sep 2024 16:07:02 +0800</lastBuildDate><atom:link href="https://blog.jiahe.dev/tags/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis Persistence in Kubernetes</title><link>https://blog.jiahe.dev/posts/1725696422/</link><pubDate>Sat, 07 Sep 2024 16:07:02 +0800</pubDate><guid>https://blog.jiahe.dev/posts/1725696422/</guid><description>&lt;p>Some time ago &lt;a href="fwmcbaubau.com">fwmcbaubau.com&lt;/a> experienced data loss multiple times in a short time span due to the lack of persistent storage.&lt;/p>
&lt;p>The data was stored in a self-hosted Redis server because it was cheaper to provision a Redis server with extra resources rather than utilize the SaaS version.
When I first developed the feature I didn&amp;rsquo;t provision any storage for the pod because of the added complexity and cost.
When the first data loss incident occurred, I looked into the costs of provisioning storage and concluded that it was reasonable.
However, restoring the data wasn&amp;rsquo;t a big deal and enough time had passed that I didn&amp;rsquo;t feel like modifying the deployment.
The recent incidents finally got me to take action because it took me a while to notice the first and the second one happened really soon after the first.&lt;/p></description></item><item><title>fwmcbaubau.com</title><link>https://blog.jiahe.dev/posts/1709531903/</link><pubDate>Mon, 04 Mar 2024 05:58:23 +0000</pubDate><guid>https://blog.jiahe.dev/posts/1709531903/</guid><description>&lt;p>Before we begin, check out the site at &lt;a href="fwmcbaubau.com">fwmcbaubau.com&lt;/a>!&lt;/p>
&lt;p>In case you didn&amp;rsquo;t visit the site or came from a future where the site is no longer live, here&amp;rsquo;s a brief description.&lt;/p>
&lt;p>fwmcbaubau.com is a website where users contribute to a global click count by clicking on a button which also plays an animation and audio.&lt;/p>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>Now that we&amp;rsquo;re on the same page, I&amp;rsquo;ll share the architecture of the site. The site itself is statically hosted, with the assets coming from a CDN.&lt;/p></description></item><item><title>Developing Mobile Pages With Pillow</title><link>https://blog.jiahe.dev/posts/1691644449/</link><pubDate>Thu, 10 Aug 2023 05:14:09 +0000</pubDate><guid>https://blog.jiahe.dev/posts/1691644449/</guid><description>&lt;p>This is a follow up post to the one I made about the &lt;a href="https://blog.jiahe.dev/posts/1690722301/" target="_blank">TTGO T5 v2.2&lt;/a>.
The aim was to prepare images and make them available for display.&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>At this point I had a Lambda function for converting image data to binary data directly usable by the epdiy Arduino library using Pillow.&lt;/p>
&lt;p>I also explored taking screenshots of webpages using Puppeteer, uploading them to S3 and passing them through the Lambda function.
However, I had a few concerns about this approach:&lt;/p></description></item></channel></rss>